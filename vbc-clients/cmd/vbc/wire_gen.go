// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"vbc/internal/biz"
	"vbc/internal/conf"
	"vbc/internal/data"
	"vbc/internal/server"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	grpcServer := server.NewGRPCServer(confServer, logger)
	dataData, cleanup, err := data.NewData(confData, logger)
	if err != nil {
		return nil, nil, err
	}
	commonRepo := data.NewCommonRepo(dataData)
	commonUsecase := biz.NewCommonUsecase(commonRepo, logger)
	webhookUsecase := biz.NewWebhookUsecase(commonUsecase)
	apiUsecase := biz.NewApiUsecase()
	asanaUsecase := biz.NewAsanaUsecase(commonUsecase, confData)
	goCacheUsecase := biz.NewGoCacheUsecase()
	fieldUsecase := biz.NewFieldUsecase(logger, commonUsecase, goCacheUsecase)
	kindUsecase := biz.NewKindUsecase(commonUsecase, goCacheUsecase)
	uniqueCodeGeneratorUsecase := biz.NewUniqueCodeGeneratorUsecase(logger, commonUsecase, confData)
	eventBus := biz.NewEventBus()
	dataEntryUsecase := biz.NewDataEntryUsecase(logger, commonUsecase, fieldUsecase, kindUsecase, uniqueCodeGeneratorUsecase, eventBus)
	fieldOptionUsecase := biz.NewFieldOptionUsecase(logger, confData, commonUsecase, goCacheUsecase)
	tRelaUsecase := biz.NewTRelaUsecase(logger, confData, commonUsecase)
	tUsecase := biz.NewTUsecase(commonUsecase, fieldUsecase, kindUsecase, fieldOptionUsecase, logger, tRelaUsecase)
	logUsecase := biz.NewLogUsecase(logger, commonUsecase, confData)
	syncAsanaTaskUsecase := biz.NewSyncAsanaTaskUsecase(commonUsecase, logger, asanaUsecase, dataEntryUsecase, tUsecase, logUsecase)
	httpWebhookUsecase := biz.NewHttpWebhookUsecase(logger, syncAsanaTaskUsecase, commonUsecase)
	httpTUsecase := biz.NewHttpTUsecase(logger, tUsecase)
	oauth2ClientUsecase := biz.NewOauth2ClientUsecase(commonUsecase, logger, confData)
	zoomTokenUsecase := biz.NewZoomTokenUsecase(logger, commonUsecase, confData)
	oauth2TokenUsecase := biz.NewOauth2TokenUsecase(commonUsecase, logger, oauth2ClientUsecase, confData, zoomTokenUsecase)
	bUsecase := biz.NewBUsecase(logger, commonUsecase, confData, tUsecase, fieldUsecase, fieldOptionUsecase)
	userUsecase := biz.NewUserUsecase(commonUsecase, tUsecase, bUsecase)
	loginBindingUsecase := biz.NewLoginBindingUsecase(logger, commonUsecase, confData, userUsecase)
	appTokenUsecase := biz.NewAppTokenUsecase(logger, commonUsecase, confData)
	microsoftUsecase := biz.NewMicrosoftUsecase(logger, confData, commonUsecase)
	httpOauth2Usecase := biz.NewHttpOauth2Usecase(logger, oauth2TokenUsecase, oauth2ClientUsecase, commonUsecase, userUsecase, loginBindingUsecase, appTokenUsecase, logUsecase, microsoftUsecase)
	accessControlWorkUsecase := biz.NewAccessControlWorkUsecase(logger, commonUsecase, confData, tUsecase)
	dataComboUsecase := biz.NewDataComboUsecase(logger, commonUsecase, confData, tUsecase)
	mapUsecase := biz.NewMapUsecase(commonUsecase)
	usageStatsUsecase := biz.NewUsageStatsUsecase(logger, commonUsecase, confData)
	zohoUsecase := biz.NewZohoUsecase(logger, commonUsecase, confData, oauth2TokenUsecase, usageStatsUsecase)
	clientCaseUsecase := biz.NewClientCaseUsecase(logger, commonUsecase, confData, tUsecase, mapUsecase, dataEntryUsecase, fieldUsecase, zohoUsecase, userUsecase)
	pricingVersionUsecase := biz.NewPricingVersionUsecase(logger, commonUsecase, confData)
	ratingPaymentUsecase := biz.NewRatingPaymentUsecase(logger, commonUsecase, confData)
	feeUsecase := biz.NewFeeUsecase(logger, commonUsecase, confData, clientCaseUsecase, pricingVersionUsecase, tUsecase, ratingPaymentUsecase)
	clientEnvelopeUsecase := biz.NewClientEnvelopeUsecase(logger, commonUsecase)
	mailFeeContentUsecase := biz.NewMailFeeContentUsecase(logger, commonUsecase, confData, ratingPaymentUsecase)
	relasLogUsecase := biz.NewRelasLogUsecase(logger, confData, commonUsecase)
	conditionUsecase := biz.NewConditionUsecase(logger, commonUsecase, confData)
	jotformSubmissionUsecase := biz.NewJotformSubmissionUsecase(logger, commonUsecase, confData)
	aiTaskUsecase := biz.NewAiTaskUsecase(logger, commonUsecase, confData)
	resourceUsecase := biz.NewResourceUsecase(logger, commonUsecase, confData)
	wordUsecase := biz.NewWordUsecase(logger, commonUsecase, confData, resourceUsecase)
	aiResultUsecase := biz.NewAiResultUsecase(logger, confData, commonUsecase)
	boxUsecase := biz.NewBoxUsecase(logger, commonUsecase, confData, oauth2TokenUsecase, usageStatsUsecase)
	boxbuzUsecase := biz.NewBoxbuzUsecase(logger, commonUsecase, confData, boxUsecase, mapUsecase, tUsecase, dataComboUsecase, feeUsecase, wordUsecase)
	statemtUsecase := biz.NewStatemtUsecase(logger, confData, commonUsecase)
	statementConditionUsecase := biz.NewStatementConditionUsecase(logger, confData, commonUsecase)
	statementConditionBuzUsecase := biz.NewStatementConditionBuzUsecase(logger, confData, commonUsecase, statementConditionUsecase, tUsecase, dataEntryUsecase)
	personalWebformUsecase := biz.NewPersonalWebformUsecase(logger, confData, commonUsecase, tUsecase, mapUsecase, feeUsecase, dataEntryUsecase)
	docEmailUsecase := biz.NewDocEmailUsecase(logger, confData, commonUsecase, aiTaskUsecase, aiResultUsecase, dataComboUsecase, wordUsecase, boxbuzUsecase, boxUsecase, mapUsecase, tUsecase, personalWebformUsecase)
	aiAssistantJobUsecase := biz.NewAiAssistantJobUsecase(logger, confData, commonUsecase)
	tFilterUsecase := biz.NewTFilterUsecase(logger, commonUsecase, confData, fieldUsecase, fieldOptionUsecase)
	longMapUsecase := biz.NewLongMapUsecase(commonUsecase)
	fieldPermissionUsecase := biz.NewFieldPermissionUsecase(logger, commonUsecase, confData, goCacheUsecase, fieldUsecase)
	fieldbuzUsecase := biz.NewFieldbuzUsecase(logger, commonUsecase, confData, fieldUsecase, fieldOptionUsecase, longMapUsecase, fieldPermissionUsecase)
	filterUsecase := biz.NewFilterUsecase(logger, confData, commonUsecase)
	filterbuzUsecase := biz.NewFilterbuzUsecase(logger, confData, commonUsecase, filterUsecase)
	settingCustomViewUsecase := biz.NewSettingCustomViewUsecase(logger, commonUsecase, confData, fieldbuzUsecase, longMapUsecase, kindUsecase, filterbuzUsecase)
	roleUsecase := biz.NewRoleUsecase(logger, confData, commonUsecase, tUsecase, goCacheUsecase)
	permissionDataFilterUsecase := biz.NewPermissionDataFilterUsecase(logger, commonUsecase, confData, fieldUsecase, tUsecase, roleUsecase)
	recordbuzSearchUsecase := biz.NewRecordbuzSearchUsecase(logger, confData, commonUsecase, tFilterUsecase, kindUsecase, bUsecase, permissionDataFilterUsecase, tUsecase)
	recordbuzUsecase := biz.NewRecordbuzUsecase(logger, commonUsecase, confData, fieldUsecase, kindUsecase, tUsecase, tFilterUsecase, settingCustomViewUsecase, permissionDataFilterUsecase, bUsecase, fieldPermissionUsecase, fieldbuzUsecase, recordbuzSearchUsecase)
	statementUsecase := biz.NewStatementUsecase(logger, confData, commonUsecase, relasLogUsecase, conditionUsecase, jotformSubmissionUsecase, aiTaskUsecase, wordUsecase, aiResultUsecase, boxbuzUsecase, boxUsecase, feeUsecase, tUsecase, statemtUsecase, dataComboUsecase, mapUsecase, statementConditionUsecase, statementConditionBuzUsecase, docEmailUsecase, aiAssistantJobUsecase, personalWebformUsecase, recordbuzUsecase)
	boxcontractUsecase := biz.NewBoxcontractUsecase(logger, commonUsecase, confData, mapUsecase, tUsecase, boxUsecase, dataComboUsecase)
	gopdfUsecase := biz.NewGopdfUsecase(logger, commonUsecase, confData, resourceUsecase)
	attorneyUsecase := biz.NewAttorneyUsecase(logger, confData, commonUsecase)
	primaryUsecase := biz.NewPrimaryUsecase(logger, confData, commonUsecase, feeUsecase)
	miscUsecase := biz.NewMiscUsecase(logger, commonUsecase, confData, tUsecase, mapUsecase, boxUsecase, boxbuzUsecase, logUsecase, primaryUsecase, attorneyUsecase, dataComboUsecase)
	sendVa2122aUsecase := biz.NewSendVa2122aUsecase(logger, confData, commonUsecase, boxcontractUsecase, boxUsecase, boxbuzUsecase, gopdfUsecase, mapUsecase, clientEnvelopeUsecase, tUsecase, attorneyUsecase, miscUsecase, dataComboUsecase)
	mailUsecase := biz.NewMailUsecase(tUsecase, confData, accessControlWorkUsecase, dataComboUsecase, feeUsecase, clientEnvelopeUsecase, mailFeeContentUsecase, logger, userUsecase, statementUsecase, sendVa2122aUsecase, attorneyUsecase)
	httpApiUsecase := biz.NewHttpApiUsecase(mailUsecase, dataEntryUsecase, tUsecase)
	taskFailureLogUsecase := biz.NewTaskFailureLogUsecase(logger, commonUsecase, confData)
	stageTransUsecase := biz.NewStageTransUsecase(logger, commonUsecase, confData, fieldOptionUsecase, fieldUsecase)
	clientUsecase := biz.NewClientUsecase(logger, commonUsecase, confData, asanaUsecase, taskFailureLogUsecase, zohoUsecase, stageTransUsecase, tUsecase, dataEntryUsecase)
	httpManualUsecase := biz.NewHttpManualUsecase(commonUsecase, tUsecase, clientUsecase, logger, uniqueCodeGeneratorUsecase, syncAsanaTaskUsecase)
	dbqsUsecase := biz.NewDbqsUsecase(logger, commonUsecase, confData, userUsecase)
	pdfcpuUsecase := biz.NewPdfcpuUsecase(logger, commonUsecase, confData, resourceUsecase)
	actionOnceHandleCopyMedicalTeamFormsUsecase := biz.NewActionOnceHandleCopyMedicalTeamFormsUsecase(logger, commonUsecase, confData, mapUsecase, tUsecase, boxUsecase, dataComboUsecase, boxbuzUsecase, clientEnvelopeUsecase, pdfcpuUsecase)
	globalEventBus := biz.NewGlobalEventBus()
	behaviorUsecase := biz.NewBehaviorUsecase(logger, commonUsecase, confData, clientUsecase, tUsecase, taskFailureLogUsecase, dbqsUsecase, actionOnceHandleCopyMedicalTeamFormsUsecase, globalEventBus)
	taskCreateUsecase := biz.NewTaskCreateUsecase(commonUsecase)
	accessControlWorkPayloadTaskUsecase := biz.NewAccessControlWorkPayloadTaskUsecase(logger, commonUsecase, confData, behaviorUsecase, taskCreateUsecase)
	httpAccessControl := biz.NewHttpAccessControl(accessControlWorkUsecase, accessControlWorkPayloadTaskUsecase)
	asanaMigrateUsecase := biz.NewAsanaMigrateUsecase(logger, commonUsecase, confData, tUsecase, zohoUsecase, dataEntryUsecase)
	rollpoingUsecase := biz.NewRollpoingUsecase(logger, commonUsecase, confData)
	boxcUsecase := biz.NewboxcUsecase(logger, commonUsecase, confData, boxbuzUsecase)
	googleDriveUsecase := biz.NewGoogleDriveUsecase(logger, commonUsecase, confData, oauth2TokenUsecase)
	googleDrivebuzUsecase := biz.NewGoogleDrivebuzUsecase(logger, commonUsecase, confData, googleDriveUsecase, boxbuzUsecase, boxUsecase, logUsecase, mapUsecase)
	remindUsecase := biz.NewRemindUsecase(logger, commonUsecase, confData, tUsecase, taskCreateUsecase, clientCaseUsecase, userUsecase, logUsecase)
	boxCollaborationUsecase := biz.NewBoxCollaborationUsecase(logger, confData, commonUsecase)
	boxUserUsecase := biz.NewBoxUserUsecase(logger, confData, commonUsecase)
	boxCollaborationBuzUsecase := biz.NewBoxCollaborationBuzUsecase(logger, confData, commonUsecase, boxCollaborationUsecase, boxUsecase, tUsecase, boxUserUsecase, userUsecase, boxbuzUsecase, mapUsecase)
	actionOnceUsecase := biz.NewActionOnceUsecase(logger, commonUsecase, confData, mapUsecase, tUsecase, zohoUsecase, feeUsecase, clientCaseUsecase, boxUsecase, dataComboUsecase, boxbuzUsecase, dbqsUsecase, boxcontractUsecase, clientEnvelopeUsecase, rollpoingUsecase, pdfcpuUsecase, behaviorUsecase, taskCreateUsecase, boxcUsecase, googleDrivebuzUsecase, stageTransUsecase, pricingVersionUsecase, dataEntryUsecase, gopdfUsecase, remindUsecase, personalWebformUsecase, boxCollaborationBuzUsecase)
	zohobuzUsecase := biz.NewZohobuzUsecase(logger, commonUsecase, confData, dataEntryUsecase, zohoUsecase, tUsecase, feeUsecase, dataComboUsecase, usageStatsUsecase, asanaMigrateUsecase, mapUsecase, actionOnceUsecase, stageTransUsecase)
	zohoinfoSyncUsecase := biz.NewZohoinfoSyncUsecase(logger, commonUsecase, confData, tUsecase, dataComboUsecase, zohoUsecase, dataEntryUsecase)
	clientCaseContractBasicDataUsecase := biz.NewClientCaseContractBasicDataUsecase(logger, commonUsecase, confData, tUsecase, mapUsecase)
	blobUsecase := biz.NewBlobUsecase(logger, commonUsecase, confData, tUsecase)
	azstorageUsecase := biz.NewAzstorageUsecase(logger, commonUsecase, confData)
	blobSliceUsecase := biz.NewBlobSliceUsecase(logger, commonUsecase, confData, azstorageUsecase)
	pdfGoFitzUsecase := biz.NewPdfGoFitzUsecase(logger, confData, commonUsecase, resourceUsecase)
	webpUsecase := biz.NewWebpUsecase(logger, confData, commonUsecase, resourceUsecase)
	blobbuzUsecase := biz.NewBlobbuzUsecase(logger, commonUsecase, confData, blobUsecase, boxUsecase, pdfcpuUsecase, blobSliceUsecase, azstorageUsecase, mapUsecase, tUsecase, dataEntryUsecase, pdfGoFitzUsecase, webpUsecase)
	haReportTaskUsecase := biz.NewHaReportTaskUsecase(logger, commonUsecase, confData)
	haReportTasksBuzUsecase := biz.NewHaReportTasksBuzUsecase(logger, commonUsecase, confData, boxUsecase, mapUsecase, tUsecase, blobUsecase, blobbuzUsecase, haReportTaskUsecase)
	loginUsecase := biz.NewLoginUsecase(logger, commonUsecase, confData, oauth2ClientUsecase)
	jwtUsecase := biz.NewJWTUsecase(logger, commonUsecase, confData, appTokenUsecase, userUsecase, tUsecase)
	timezonesUsecase := biz.NewTimezonesUsecase(logger, commonUsecase, confData)
	mgmtPermissionUsecase := biz.NewMgmtPermissionUsecase(logger, confData, commonUsecase, userUsecase)
	menuUsecase := biz.NewMenuUsecase(logger, confData, commonUsecase, userUsecase, mgmtPermissionUsecase, roleUsecase)
	httpUserUsecase := biz.NewHttpUserUsecase(logger, commonUsecase, confData, jwtUsecase, userUsecase, appTokenUsecase, timezonesUsecase, roleUsecase, menuUsecase)
	blobCommentUsecase := biz.NewBlobCommentUsecase(logger, commonUsecase, confData)
	fileUsecase := biz.NewFileUsecase(logger, confData, commonUsecase)
	httpBlobUsecase := biz.NewHttpBlobUsecase(logger, commonUsecase, confData, jwtUsecase, blobCommentUsecase, userUsecase, logUsecase, boxUsecase, blobbuzUsecase, blobUsecase, clientCaseUsecase, tUsecase, httpTUsecase, azstorageUsecase, blobSliceUsecase, boxbuzUsecase, fileUsecase)
	zoomRecordingFileUsecase := biz.NewZoomRecordingFileUsecase(logger, commonUsecase, confData)
	zoomUserUsecase := biz.NewZoomUserUsecase(logger, commonUsecase, confData)
	zoomMeetingUsecase := biz.NewZoomMeetingUsecase(logger, commonUsecase, confData, boxUsecase, zoomUserUsecase)
	zoomUsecase := biz.NewZoomUsecase(logger, commonUsecase, confData, oauth2TokenUsecase)
	zoombuzUsecase := biz.NewZoombuzUsecase(logger, commonUsecase, confData, zoomMeetingUsecase, zoomRecordingFileUsecase, zoomUserUsecase, zoomUsecase)
	zoomUploadBoxUsecase := biz.NewZoomUploadBoxUsecase(logger, confData, commonUsecase, boxUsecase, zoomUsecase)
	zoomRecordingFileJobUsecase := biz.NewZoomRecordingFileJobUsecase(logger, commonUsecase, confData, zoomMeetingUsecase, boxUsecase, zoomUsecase, zoombuzUsecase, zoomRecordingFileUsecase, zoomUploadBoxUsecase)
	vbcAIUsecase := biz.NewVbcAIUsecase(logger, confData, commonUsecase)
	aiPromptUsecase := biz.NewAiPromptUsecase(logger, confData, commonUsecase)
	questionnairesUsecase := biz.NewQuestionnairesUsecase(logger, commonUsecase, confData, tUsecase, dataComboUsecase)
	questionnairesbuzUsecase := biz.NewQuestionnairesbuzUsecase(logger, confData, commonUsecase, questionnairesUsecase, relasLogUsecase, jotformSubmissionUsecase, feeUsecase)
	cacheLogUsecase := biz.NewCacheLogUsecase(logger, confData, commonUsecase)
	awsclaude3Usecase := biz.NewAwsclaude3Usecase(logger, commonUsecase, confData, jotformSubmissionUsecase, vbcAIUsecase, aiResultUsecase, aiPromptUsecase, questionnairesbuzUsecase, conditionUsecase, cacheLogUsecase, feeUsecase)
	httpSettingsUsecase := biz.NewHttpSettingsUsecase(logger, commonUsecase, confData, jwtUsecase, userUsecase, appTokenUsecase, fieldUsecase, fieldOptionUsecase)
	jotformUsecase := biz.NewJotformUsecase(logger, commonUsecase, confData)
	jotformbuzUsecase := biz.NewJotformbuzUsecase(logger, commonUsecase, confData, jotformUsecase, jotformSubmissionUsecase, tUsecase, dataComboUsecase, zohoUsecase, actionOnceUsecase, behaviorUsecase, boxbuzUsecase, logUsecase, boxUsecase, mapUsecase, dataEntryUsecase, fieldOptionUsecase, fieldUsecase)
	metadataUsecase := biz.NewMetadataUsecase(logger, commonUsecase, confData, conditionUsecase, jwtUsecase, tUsecase, fieldbuzUsecase)
	aiUsecase := biz.NewAiUsecase(logger, confData, commonUsecase, awsclaude3Usecase, aiPromptUsecase, aiResultUsecase)
	conditionLogAiUsecase := biz.NewConditionLogAiUsecase(logger, confData, commonUsecase)
	conditionRelaAiUsecase := biz.NewConditionRelaAiUsecase(logger, confData, commonUsecase)
	conditionCategoryUsecase := biz.NewConditionCategoryUsecase(logger, confData, commonUsecase)
	conditionbuzUsecase := biz.NewConditionbuzUsecase(logger, commonUsecase, confData, tUsecase, conditionUsecase, aiUsecase, conditionLogAiUsecase, conditionRelaAiUsecase, conditionCategoryUsecase)
	settingSectionFieldUsecase := biz.NewSettingSectionFieldUsecase(logger, commonUsecase, confData, fieldPermissionUsecase)
	timelinesbuzUsecase := biz.NewTimelinesbuzUsecase(logger, commonUsecase, confData, kindUsecase, tUsecase, fieldUsecase, fieldOptionUsecase, tRelaUsecase, fieldPermissionUsecase)
	fieldValidatorUsecase := biz.NewFieldValidatorUsecase(logger, commonUsecase, confData, goCacheUsecase, fieldUsecase)
	clientTaskUsecase := biz.NewClientTaskUsecase(logger, commonUsecase, confData, tUsecase, zohoUsecase, logUsecase, kindUsecase, dataEntryUsecase)
	automaticTaskCreationUsecase := biz.NewAutomaticTaskCreationUsecase(logger, confData, tUsecase, clientTaskUsecase, eventBus)
	queueUsecase := biz.NewQueueUsecase(logger, commonUsecase, confData, tUsecase, eventBus, clientTaskUsecase, automaticTaskCreationUsecase)
	recordLogUsecase := biz.NewRecordLogUsecase(logger, confData, commonUsecase)
	medicalDbqCostUsecase := biz.NewMedicalDbqCostUsecase(logger, confData, commonUsecase, mapUsecase)
	clientCasebuzUsecase := biz.NewClientCasebuzUsecase(logger, confData, commonUsecase, tUsecase, dataEntryUsecase)
	websiteUsecase := biz.NewWebsiteUsecase(logger, commonUsecase, confData, asanaUsecase, zohoUsecase, dataEntryUsecase)
	leadsUsecase := biz.NewLeadsUsecase(logger, confData, commonUsecase, logUsecase, websiteUsecase)
	clientReviewUsecase := biz.NewClientReviewUsecase(logger, confData, commonUsecase)
	clientReviewBuzUsecase := biz.NewClientReviewBuzUsecase(logger, confData, commonUsecase, clientReviewUsecase)
	statementCommentUsecase := biz.NewStatementCommentUsecase(logger, confData, commonUsecase)
	notificationUsecase := biz.NewNotificationUsecase(logger, confData, commonUsecase)
	notesbuzUsecase := biz.NewNotesbuzUsecase(logger, confData, commonUsecase, eventBus, notificationUsecase, userUsecase, tUsecase, clientCaseUsecase)
	statementCommentBuzUsecase := biz.NewStatementCommentBuzUsecase(logger, confData, commonUsecase, tUsecase, dataComboUsecase, statementCommentUsecase, statementConditionUsecase, dataEntryUsecase, mapUsecase, notesbuzUsecase, recordbuzUsecase)
	recordHttpUsecase := biz.NewRecordHttpUsecase(logger, commonUsecase, confData, tUsecase, jwtUsecase, recordbuzUsecase, settingSectionFieldUsecase, fieldUsecase, fieldOptionUsecase, dataEntryUsecase, zohoUsecase, timelinesbuzUsecase, bUsecase, userUsecase, fieldPermissionUsecase, fieldValidatorUsecase, timezonesUsecase, permissionDataFilterUsecase, kindUsecase, recordbuzSearchUsecase, queueUsecase, zohobuzUsecase, fieldbuzUsecase, conditionbuzUsecase, conditionLogAiUsecase, conditionRelaAiUsecase, conditionUsecase, filterUsecase, recordLogUsecase, medicalDbqCostUsecase, logUsecase, clientCasebuzUsecase, statementUsecase, leadsUsecase, clientReviewBuzUsecase, statementCommentBuzUsecase, clientUsecase)
	optionUsecase := biz.NewOptionUsecase(logger, confData, commonUsecase, questionnairesUsecase, jotformSubmissionUsecase, feeUsecase)
	metadataHttpUsecase := biz.NewMetadataHttpUsecase(logger, commonUsecase, confData, fieldUsecase, fieldOptionUsecase, fieldbuzUsecase, tUsecase, jwtUsecase, conditionCategoryUsecase, optionUsecase, roleUsecase, userUsecase, clientUsecase)
	settingHttpUsecase := biz.NewSettingHttpUsecase(logger, commonUsecase, confData, jwtUsecase, settingCustomViewUsecase, fieldbuzUsecase)
	timelineUsecase := biz.NewTimelineUsecase(logger, commonUsecase, confData, dataEntryUsecase)
	notesUsecase := biz.NewNotesUsecase(logger, commonUsecase, confData, dataEntryUsecase, tUsecase, timelineUsecase)
	notesHttpUsecase := biz.NewNotesHttpUsecase(logger, commonUsecase, confData, notesUsecase, jwtUsecase, tUsecase, kindUsecase, dataEntryUsecase, timelineUsecase)
	taskHttpUsecase := biz.NewTaskHttpUsecase(logger, confData, jwtUsecase, recordbuzSearchUsecase, kindUsecase, clientTaskUsecase, timezonesUsecase, fieldUsecase, tUsecase, dataEntryUsecase, queueUsecase)
	flowHttpUsecase := biz.NewFlowHttpUsecase(logger, confData, jwtUsecase, userUsecase)
	notificationbuzUsecase := biz.NewNotificationbuzUsecase(logger, confData, commonUsecase, notificationUsecase, userUsecase, notesUsecase)
	notificationHttpUsecase := biz.NewNotificationHttpUsecase(logger, confData, jwtUsecase, notificationUsecase, notificationbuzUsecase)
	eventstreamHttpUsecase := biz.NewEventstreamHttpUsecase(logger, confData, jwtUsecase, commonUsecase)
	zohoCollaboratorUsecase := biz.NewZohoCollaboratorUsecase(logger, confData, commonUsecase, zohoUsecase, dataEntryUsecase, tUsecase)
	unsubscribesUsecase := biz.NewUnsubscribesUsecase(logger, confData, commonUsecase)
	dialpadUsecase := biz.NewDialpadUsecase(logger, commonUsecase, confData, logUsecase, unsubscribesUsecase)
	dialpadbuzInternalUsecase := biz.NewDialpadbuzInternalUsecase(logger, confData, commonUsecase, dialpadUsecase, taskCreateUsecase, logUsecase)
	dialpadbuzUsecase := biz.NewDialpadbuzUsecase(logger, commonUsecase, confData, dialpadUsecase, tUsecase, dataEntryUsecase, dataComboUsecase, clientEnvelopeUsecase, behaviorUsecase, mapUsecase, userUsecase, clientCaseUsecase, logUsecase, personalWebformUsecase)
	unsubscribesbuzUsecase := biz.NewUnsubscribesbuzUsecase(logger, confData, commonUsecase, unsubscribesUsecase, dialpadbuzInternalUsecase, clientUsecase, dialpadbuzUsecase, clientCaseUsecase, logUsecase, dialpadUsecase)
	unsubscribesHttpUsecase := biz.NewUnsubscribesHttpUsecase(logger, confData, jwtUsecase, unsubscribesUsecase, clientCaseUsecase, clientUsecase, tUsecase, timezonesUsecase, logUsecase, unsubscribesbuzUsecase)
	conditionSourceUsecase := biz.NewConditionSourceUsecase(logger, confData, commonUsecase)
	conditionSourcebuzUsecase := biz.NewConditionSourcebuzUsecase(logger, confData, commonUsecase, conditionSourceUsecase, tUsecase)
	wordbuzUsecase := biz.NewWordbuzUsecase(logger, confData, commonUsecase, boxUsecase, boxbuzUsecase)
	psbuzUsecase := biz.NewPsbuzUsecase(logger, confData, commonUsecase, boxbuzUsecase, aiTaskUsecase, boxUsecase, wordbuzUsecase, statementUsecase)
	aiStatementUsecase := biz.NewAiStatementUsecase(logger, commonUsecase, confData, longMapUsecase, awsclaude3Usecase, tUsecase)
	aiTaskbuzUsecase := biz.NewAiTaskbuzUsecase(logger, confData, commonUsecase, aiTaskUsecase, awsclaude3Usecase, aiPromptUsecase, tUsecase, aiResultUsecase, fieldOptionUsecase, fieldUsecase, dataEntryUsecase, aiUsecase, jotformSubmissionUsecase, relasLogUsecase, questionnairesbuzUsecase, conditionUsecase, feeUsecase, wordUsecase, statementUsecase, boxUsecase, dataComboUsecase, statementConditionUsecase)
	assistantUsecase := biz.NewAssistantUsecase(logger, confData, commonUsecase, statementUsecase, aiPromptUsecase, awsclaude3Usecase, tUsecase, dataComboUsecase, statementConditionUsecase, aiAssistantJobUsecase, aiTaskbuzUsecase, feeUsecase, jotformSubmissionUsecase, aiUsecase, aiTaskUsecase, aiResultUsecase)
	aiTaskJobUsecase := biz.NewAiTaskJobUsecase(logger, commonUsecase, confData, aiStatementUsecase, tUsecase, aiUsecase, jotformSubmissionUsecase, docEmailUsecase, awsclaude3Usecase, statementUsecase, dataComboUsecase, aiTaskUsecase, aiResultUsecase, aiTaskbuzUsecase, feeUsecase, statementConditionUsecase, assistantUsecase, aiAssistantJobUsecase, mapUsecase)
	psHttpUsecase := biz.NewPsHttpUsecase(logger, confData, jwtUsecase, awsclaude3Usecase, aiResultUsecase, aiUsecase, conditionbuzUsecase, tUsecase, aiTaskUsecase, dataComboUsecase, statementUsecase, relasLogUsecase, conditionUsecase, commonUsecase, psbuzUsecase, aiTaskJobUsecase, aiTaskbuzUsecase)
	aiHttpUsecase := biz.NewAiHttpUsecase(logger, confData, jwtUsecase, awsclaude3Usecase, aiResultUsecase, aiUsecase, conditionbuzUsecase, tUsecase, aiTaskUsecase, dataComboUsecase, statementUsecase, relasLogUsecase, conditionUsecase, commonUsecase, psHttpUsecase, statementConditionUsecase)
	conditionHttpUsecase := biz.NewConditionHttpUsecase(logger, confData, jwtUsecase, conditionUsecase, conditionRelaAiUsecase, conditionLogAiUsecase, conditionCategoryUsecase, conditionbuzUsecase)
	invokeLogUsecase := biz.NewInvokeLogUsecase(logger, confData, commonUsecase)
	zohoNoteScanJobUsecase := biz.NewZohoNoteScanJobUsecase(logger, commonUsecase, confData, mapUsecase, zohoUsecase, zohobuzUsecase, usageStatsUsecase, invokeLogUsecase)
	dueDateUsecase := biz.NewDueDateUsecase(logger, confData, commonUsecase, tUsecase, dataEntryUsecase)
	websocketUsecase := biz.NewWebsocketUsecase(logger, confData, commonUsecase)
	commonHttpUsecase := biz.NewCommonHttpUsecase(logger, confData, jwtUsecase, conditionUsecase, questionnairesbuzUsecase, relasLogUsecase, jotformSubmissionUsecase, tUsecase)
	manualThingstoknowUsecase := biz.NewManualThingstoknowUsecase(logger, commonUsecase, confData, tUsecase, boxbuzUsecase, boxUsecase, logUsecase)
	cmdUsecase := biz.NewCmdUsecase(logger, confData, commonUsecase, boxUsecase)
	userHttpUsecase := biz.NewUserHttpUsecase(logger, confData, commonUsecase, tUsecase, dialpadUsecase, jwtUsecase, userUsecase, dataEntryUsecase, mailUsecase)
	mgmtHttpUsecase := biz.NewMgmtHttpUsecase(logger, confData, jwtUsecase, menuUsecase)
	revisionHistoryUsecase := biz.NewRevisionHistoryUsecase(logger, confData, commonUsecase)
	contractbuzUsecase := biz.NewContractbuzUsecase(logger, confData, commonUsecase, tUsecase, mapUsecase, clientCaseUsecase, zohobuzUsecase, dataEntryUsecase, revisionHistoryUsecase, mgmtPermissionUsecase)
	contractHttpUsecase := biz.NewContractHttpUsecase(logger, confData, jwtUsecase, contractbuzUsecase, revisionHistoryUsecase, tUsecase, mgmtPermissionUsecase)
	vbcDataVerifyUsecase := biz.NewVbcDataVerifyUsecase(logger, confData, commonUsecase, tUsecase, feeUsecase, clientCaseUsecase, dataComboUsecase, zohobuzUsecase)
	monitorUsecase := biz.NewMonitorUsecase(logger, confData, commonUsecase, tUsecase)
	leadConversionSummaryUsecase := biz.NewLeadConversionSummaryUsecase(logger, confData, commonUsecase)
	changeHisUsecase := biz.NewChangeHisUsecase(logger, confData, commonUsecase)
	leadConversionSummaryBuzUsecase := biz.NewLeadConversionSummaryBuzUsecase(logger, confData, commonUsecase, leadConversionSummaryUsecase, tUsecase, changeHisUsecase)
	aiAssistantJobBuzUsecase := biz.NewAiAssistantJobBuzUsecase(logger, confData, commonUsecase, aiAssistantJobUsecase, aiTaskUsecase, aiResultUsecase, assistantUsecase, statementUsecase, tUsecase, statementConditionUsecase, mapUsecase, docEmailUsecase)
	boxdcUsecase := biz.NewBoxdcUsecase(logger, commonUsecase, confData, boxbuzUsecase)
	reminderEventUsecase := biz.NewReminderEventUsecase(logger, commonUsecase, confData)
	counterUsecase := biz.NewCounterUsecase(logger, commonUsecase, confData)
	counterbuzUsecase := biz.NewCounterbuzUsecase(logger, commonUsecase, confData, counterUsecase)
	recordReviewJobUsecase := biz.NewRecordReviewJobUsecase(commonUsecase, logger, dataEntryUsecase, dataComboUsecase, tUsecase, boxdcUsecase, boxbuzUsecase, boxUsecase, logUsecase, reminderEventUsecase, confData, mapUsecase, boxcUsecase, clientCaseUsecase, counterbuzUsecase)
	recordReviewUsecase := biz.NewRecordReviewUsecase(logger, commonUsecase, confData, mapUsecase, recordReviewJobUsecase, logUsecase)
	filebuzUsecase := biz.NewFilebuzUsecase(logger, confData, commonUsecase, tUsecase, fileUsecase)
	boxWebhookLogUsecase := biz.NewBoxWebhookLogUsecase(logger, commonUsecase, confData, taskCreateUsecase, clientEnvelopeUsecase, behaviorUsecase, tUsecase, boxbuzUsecase, boxUsecase, taskFailureLogUsecase, recordReviewUsecase, jotformbuzUsecase, jotformSubmissionUsecase, filebuzUsecase, mapUsecase)
	exportUsecase := biz.NewExportUsecase(logger, confData, commonUsecase, docEmailUsecase, tUsecase, dataComboUsecase, wordUsecase, gopdfUsecase, statementUsecase)
	engine := biz.NewGinRegisterHTTPServer(apiUsecase, commonUsecase, logger, httpWebhookUsecase, httpTUsecase, httpOauth2Usecase, httpApiUsecase, httpManualUsecase, httpAccessControl, zohobuzUsecase, asanaMigrateUsecase, zohoinfoSyncUsecase, actionOnceUsecase, clientCaseContractBasicDataUsecase, haReportTasksBuzUsecase, loginUsecase, jwtUsecase, httpUserUsecase, httpBlobUsecase, zoomRecordingFileUsecase, zoomRecordingFileJobUsecase, awsclaude3Usecase, httpSettingsUsecase, miscUsecase, jotformbuzUsecase, questionnairesUsecase, clientCaseUsecase, metadataUsecase, conditionbuzUsecase, recordHttpUsecase, metadataHttpUsecase, settingHttpUsecase, notesHttpUsecase, taskHttpUsecase, flowHttpUsecase, notificationHttpUsecase, eventstreamHttpUsecase, zohoCollaboratorUsecase, unsubscribesHttpUsecase, conditionSourcebuzUsecase, aiHttpUsecase, aiUsecase, conditionHttpUsecase, zohoNoteScanJobUsecase, dueDateUsecase, websocketUsecase, jotformSubmissionUsecase, commonHttpUsecase, manualThingstoknowUsecase, cmdUsecase, userHttpUsecase, mgmtHttpUsecase, zoomUploadBoxUsecase, psHttpUsecase, pdfGoFitzUsecase, remindUsecase, contractHttpUsecase, vbcDataVerifyUsecase, monitorUsecase, leadConversionSummaryBuzUsecase, aiTaskbuzUsecase, aiAssistantJobBuzUsecase, boxWebhookLogUsecase, exportUsecase, personalWebformUsecase)
	httpServer := server.NewHTTPServer(confServer, logger, webhookUsecase, commonUsecase, engine)
	envelopeStatusChangeUsecase := biz.NewEnvelopeStatusChangeUsecase(logger, commonUsecase, mapUsecase, clientEnvelopeUsecase, tUsecase, boxUsecase, confData)
	docuSignUsecase := biz.NewDocuSignUsecase(logger, confData, oauth2TokenUsecase, oauth2ClientUsecase, envelopeStatusChangeUsecase, commonUsecase, mapUsecase, pricingVersionUsecase)
	adobeSignUsecase := biz.NewAdobeSignUsecase(logger, commonUsecase, confData, oauth2TokenUsecase)
	clientAgreementUsecase := biz.NewClientAgreementUsecase(logger, commonUsecase, confData)
	adobesignSyncTaskUsecase := biz.NewAdobesignSyncTaskUsecase(commonUsecase, logger, adobeSignUsecase, dataEntryUsecase, clientAgreementUsecase)
	adobeWebhookEventUsecase := biz.NewAdobeWebhookEventUsecase(logger, confData, commonUsecase, mapUsecase, adobesignSyncTaskUsecase)
	sendsmsConditionUsecase := biz.NewSendsmsConditionUsecase(logger, commonUsecase, confData)
	sendsmsClientTasksConditionUsecase := biz.NewSendsmsClientTasksConditionUsecase(logger, commonUsecase, confData, clientCaseUsecase, clientTaskUsecase)
	cronTriggerUsecase := biz.NewCronTriggerUsecase(logger, commonUsecase, confData, dialpadbuzUsecase, tUsecase, taskCreateUsecase, sendsmsConditionUsecase, sendsmsClientTasksConditionUsecase)
	attorneybuzUsecase := biz.NewAttorneybuzUsecase(logger, confData, commonUsecase, mapUsecase, attorneyUsecase)
	amUsecase := biz.NewAmUsecase(logger, confData, commonUsecase, tUsecase, mapUsecase, taskCreateUsecase, boxUsecase, attorneybuzUsecase, dataEntryUsecase, attorneyUsecase)
	dag := biz.NewDag(commonUsecase, tUsecase, logger, mailUsecase, docuSignUsecase, clientEnvelopeUsecase, mapUsecase, boxUsecase, confData, envelopeStatusChangeUsecase, taskCreateUsecase, adobeSignUsecase, adobeWebhookEventUsecase, clientAgreementUsecase, boxcontractUsecase, rollpoingUsecase, dataComboUsecase, zohoUsecase, userUsecase, remindUsecase, behaviorUsecase, dialpadbuzUsecase, cronTriggerUsecase, stageTransUsecase, gopdfUsecase, dataEntryUsecase, attorneybuzUsecase, attorneyUsecase, amUsecase, personalWebformUsecase, boxbuzUsecase, boxCollaborationBuzUsecase)
	contractReminderUsecase := biz.NewContractReminderUsecase(logger, commonUsecase, confData, tUsecase, taskCreateUsecase, logUsecase, clientEnvelopeUsecase)
	taskUsecase := biz.NewTaskUsecase(logger, commonUsecase, tUsecase, mailUsecase, docuSignUsecase, clientEnvelopeUsecase, dag, taskCreateUsecase, behaviorUsecase, remindUsecase, contractReminderUsecase, dialpadUsecase, dialpadbuzUsecase, miscUsecase, sendVa2122aUsecase)
	xeroUsecase := biz.NewXeroUsecase(logger, commonUsecase, confData, oauth2TokenUsecase, mapUsecase, logUsecase, feeUsecase, dataComboUsecase, clientCaseUsecase, dataEntryUsecase)
	xeroInvoiceUsecase := biz.NewXeroInvoiceUsecase(logger, commonUsecase, confData, mapUsecase, xeroUsecase, tUsecase, logUsecase, dataComboUsecase, behaviorUsecase)
	maCongratsEmailUsecase := biz.NewMaCongratsEmailUsecase(logger, commonUsecase, confData, mapUsecase, tUsecase, taskCreateUsecase, dataComboUsecase)
	cronTriggerCreateUsecase := biz.NewCronTriggerCreateUsecase(logger, commonUsecase, confData, taskCreateUsecase, tUsecase)
	clientTaskBuzUsecase := biz.NewClientTaskBuzUsecase(logger, commonUsecase, confData, tUsecase, zohoUsecase, clientTaskUsecase, dataEntryUsecase, stageTransUsecase, logUsecase, fieldUsecase, mapUsecase)
	itfexpirationUsecase := biz.NewItfexpirationUsecase(logger, commonUsecase, confData, tUsecase, zohoUsecase, logUsecase, dataEntryUsecase, taskCreateUsecase, cronTriggerCreateUsecase)
	leadVSChangeUsecase := biz.NewLeadVSChangeUsecase(logger, confData, commonUsecase, tUsecase, mapUsecase, userUsecase, dataComboUsecase, dataEntryUsecase)
	changeHistoryUseacse := biz.NewChangeHistoryUseacse(logger, mapUsecase, commonUsecase, taskUsecase, taskCreateUsecase, tUsecase, docuSignUsecase, confData, xeroInvoiceUsecase, taskFailureLogUsecase, maCongratsEmailUsecase, dataComboUsecase, feeUsecase, zohobuzUsecase, logUsecase, zohoinfoSyncUsecase, actionOnceUsecase, clientTaskUsecase, dbqsUsecase, miscUsecase, dataEntryUsecase, clientCaseUsecase, cronTriggerCreateUsecase, clientTaskBuzUsecase, itfexpirationUsecase, automaticTaskCreationUsecase, leadVSChangeUsecase, aiTaskUsecase, aiTaskbuzUsecase, leadConversionSummaryBuzUsecase, amUsecase)
	formResponseUsecase := biz.NewFormResponseUsecase(commonUsecase, logger, tUsecase, asanaUsecase, behaviorUsecase, dataComboUsecase, zohoUsecase, actionOnceUsecase)
	taskFailureLogJobUsecase := biz.NewTaskFailureLogJobUsecase(logger, commonUsecase, confData, mailUsecase)
	rollpoingJobUsecase := biz.NewRollpoingJobUsecase(logger, commonUsecase, confData, boxUsecase, taskCreateUsecase, clientEnvelopeUsecase, behaviorUsecase)
	webhookLogJobUsecase := biz.NewWebhookLogJobUsecase(logger, commonUsecase, confData, websiteUsecase, taskFailureLogUsecase, jotformbuzUsecase, unsubscribesbuzUsecase)
	zohoDealScanJobUsecase := biz.NewZohoDealScanJobUsecase(logger, commonUsecase, confData, mapUsecase, zohoUsecase, zohobuzUsecase, usageStatsUsecase)
	zohoContactScanJobUsecase := biz.NewZohoContactScanJobUsecase(logger, commonUsecase, confData, mapUsecase, zohoUsecase, zohobuzUsecase, usageStatsUsecase)
	zohoTaskScanJobUsecase := biz.NewZohoTaskScanJobUsecase(logger, commonUsecase, confData, mapUsecase, zohoUsecase, zohobuzUsecase, usageStatsUsecase)
	cronUsecase := biz.NewCronUsecase()
	reminderEventsJobUsecase := biz.NewReminderEventsJobUsecase(logger, commonUsecase, confData, reminderEventUsecase, userUsecase, remindUsecase, mailUsecase, tUsecase)
	zohobuzTaskUsecase := biz.NewZohobuzTaskUsecase(logger, commonUsecase, confData, usageStatsUsecase, zohoUsecase, queueUsecase)
	azcognitiveUsecase := biz.NewAzcognitiveUsecase(logger, commonUsecase, confData, logUsecase)
	haReportPageUsecase := biz.NewHaReportPageUsecase(logger, commonUsecase, confData)
	azopenaiUsecase := biz.NewAzopenaiUsecase(logger, commonUsecase, confData)
	haiUsecase := biz.NewHaiUsecase(logger, commonUsecase, confData, azopenaiUsecase, logUsecase, awsclaude3Usecase)
	pdfUsecase := biz.NewPdfUsecase(logger, commonUsecase, confData)
	haReportPdfUsecase := biz.NewHaReportPdfUsecase(logger, commonUsecase, confData, pdfUsecase, blobSliceUsecase, haReportPageUsecase, haReportTaskUsecase, tUsecase, azstorageUsecase, blobUsecase)
	haReportTaskJobUsecase := biz.NewHaReportTaskJobUsecase(logger, commonUsecase, confData, azcognitiveUsecase, blobUsecase, blobSliceUsecase, azstorageUsecase, haReportPageUsecase, haiUsecase, haReportPdfUsecase, tUsecase, boxUsecase, dataComboUsecase, haReportTaskUsecase)
	blobJobUsecase := biz.NewBlobJobUsecase(logger, commonUsecase, confData, azcognitiveUsecase, blobUsecase, blobSliceUsecase, azstorageUsecase, blobbuzUsecase, boxUsecase, tUsecase, dataEntryUsecase)
	blobSliceJobUsecase := biz.NewBlobSliceJobUsecase(logger, commonUsecase, confData, azcognitiveUsecase, blobUsecase, blobSliceUsecase, azstorageUsecase, dataEntryUsecase, haReportTasksBuzUsecase)
	haReportPageJobUsecase := biz.NewHaReportPageJobUsecase(logger, commonUsecase, confData, azcognitiveUsecase, blobUsecase, blobSliceUsecase, azstorageUsecase, haReportPageUsecase, haiUsecase, haReportPdfUsecase, tUsecase, boxUsecase, dataComboUsecase, haReportTaskUsecase, dataEntryUsecase, blobCommentUsecase)
	caseWithoutTaskUsecase := biz.NewCaseWithoutTaskUsecase(logger, commonUsecase, confData, tUsecase, mapUsecase, mailUsecase)
	bUsaStateUsecase := biz.NewBUsaStateUsecase(logger, commonUsecase, confData, goCacheUsecase)
	logInfoUsecase := biz.NewLogInfoUsecase(logger, commonUsecase, confData)
	zoomMeetingSmsNoticeJobUsecase := biz.NewZoomMeetingSmsNoticeJobUsecase(logger, commonUsecase, confData, zoombuzUsecase, zoomUsecase, tUsecase, dialpadbuzUsecase, userUsecase, mapUsecase, dialpadUsecase, dataComboUsecase, logUsecase, bUsaStateUsecase, logInfoUsecase)
	zohoDealScan2JobUsecase := biz.NewZohoDealScan2JobUsecase(logger, commonUsecase, confData, mapUsecase, zohoUsecase, zohobuzUsecase, usageStatsUsecase)
	clientTaskHandleWhatGidJobUsecase := biz.NewClientTaskHandleWhatGidJobUsecase(commonUsecase, logger, dataEntryUsecase, dataComboUsecase, tUsecase, logUsecase, confData, clientTaskUsecase)
	clientTaskHandleWhoGidJobUsecase := biz.NewClientTaskHandleWhoGidJobUsecase(commonUsecase, logger, dataEntryUsecase, dataComboUsecase, tUsecase, logUsecase, confData, clientTaskUsecase)
	automaticUpdateDueDateUsecase := biz.NewAutomaticUpdateDueDateUsecase(logger, confData, tUsecase, clientTaskUsecase, eventBus, dataEntryUsecase, recordLogUsecase, changeHisUsecase, fieldOptionUsecase)
	globalEventBusBuzUsecase := biz.NewGlobalEventBusBuzUsecase(logger, confData, commonUsecase, tUsecase, dialpadbuzUsecase, globalEventBus, cronTriggerCreateUsecase, sendVa2122aUsecase, clientEnvelopeUsecase, miscUsecase)
	referrerLogUsecase := biz.NewReferrerLogUsecase(logger, confData, commonUsecase)
	eventBusReferrerUsecase := biz.NewEventBusReferrerUsecase(logger, confData, tUsecase, clientTaskUsecase, eventBus, dataEntryUsecase, recordLogUsecase, changeHisUsecase, fieldOptionUsecase, referrerLogUsecase, clientCaseUsecase)
	globalInjectUsecase := biz.NewGlobalInjectUsecase(logger, globalEventBusBuzUsecase, conditionCategoryUsecase, eventBusReferrerUsecase)
	invokeLogJobUsecase := biz.NewInvokeLogJobUsecase(logger, commonUsecase, confData, notesUsecase, tUsecase)
	clientCaseSyncbuzUsecase := biz.NewClientCaseSyncbuzUsecase(logger, confData, commonUsecase, tUsecase, dataEntryUsecase, statementUsecase)
	collaboratorbuzUsecase := biz.NewCollaboratorbuzUsecase(logger, confData, commonUsecase, userUsecase, tUsecase, dataEntryUsecase)
	caseOwnerChangeUsecase := biz.NewCaseOwnerChangeUsecase(logger, confData, commonUsecase, fieldOptionUsecase, fieldUsecase, userUsecase, tUsecase, dataEntryUsecase, eventBus, boxCollaborationBuzUsecase, collaboratorbuzUsecase, mapUsecase)
	leadcobuzUsecase := biz.NewLeadcobuzUsecase(logger, confData, commonUsecase, tUsecase, userUsecase, dataComboUsecase, dataEntryUsecase)
	collaboratorClientbuzUsecase := biz.NewCollaboratorClientbuzUsecase(logger, confData, commonUsecase, userUsecase, tUsecase, dataEntryUsecase, dataComboUsecase)
	changeHistoryNodelayJobUseacse := biz.NewChangeHistoryNodelayJobUseacse(logger, mapUsecase, confData, commonUsecase, clientCaseSyncbuzUsecase, tUsecase, dataComboUsecase, changeHisUsecase, zohobuzUsecase, taskFailureLogUsecase, queueUsecase, leadVSChangeUsecase, caseOwnerChangeUsecase, actionOnceUsecase, leadConversionSummaryBuzUsecase, aiHttpUsecase, statementConditionBuzUsecase, statementUsecase, aiAssistantJobBuzUsecase, personalWebformUsecase, boxCollaborationBuzUsecase, collaboratorbuzUsecase, leadcobuzUsecase, collaboratorClientbuzUsecase)
	clientNameChangeJobUsecase := biz.NewClientNameChangeJobUsecase(commonUsecase, logger, dataEntryUsecase, dataComboUsecase, tUsecase, logUsecase, confData, clientTaskUsecase, mapUsecase, boxUsecase)
	boxUserBuzUsecase := biz.NewBoxUserBuzUsecase(logger, confData, commonUsecase, boxUserUsecase, boxUsecase)
	monitoredEmailsUsecase := biz.NewMonitoredEmailsUsecase(logger, confData, commonUsecase)
	monitoredEmailsTasksUsecase := biz.NewMonitoredEmailsTasksUsecase(logger, confData, commonUsecase)
	monitoredEmailsJobUsecase := biz.NewMonitoredEmailsJobUsecase(logger, confData, monitoredEmailsUsecase, attorneyUsecase, monitoredEmailsTasksUsecase, clientEnvelopeUsecase)
	job := server.NewJob(confData, logger, syncAsanaTaskUsecase, changeHistoryUseacse, taskUsecase, oauth2TokenUsecase, docuSignUsecase, envelopeStatusChangeUsecase, adobeWebhookEventUsecase, adobesignSyncTaskUsecase, formResponseUsecase, boxWebhookLogUsecase, taskFailureLogJobUsecase, rollpoingJobUsecase, webhookLogJobUsecase, zohoDealScanJobUsecase, zohoContactScanJobUsecase, zohoTaskScanJobUsecase, cronUsecase, zohobuzUsecase, recordReviewJobUsecase, reminderEventsJobUsecase, zohobuzTaskUsecase, haReportTaskJobUsecase, blobJobUsecase, blobSliceJobUsecase, haReportPageJobUsecase, caseWithoutTaskUsecase, zoombuzUsecase, zoomRecordingFileJobUsecase, itfexpirationUsecase, zoomMeetingSmsNoticeJobUsecase, clientTaskBuzUsecase, zohoDealScan2JobUsecase, clientTaskHandleWhatGidJobUsecase, clientTaskHandleWhoGidJobUsecase, automaticUpdateDueDateUsecase, notesbuzUsecase, zohoCollaboratorUsecase, globalInjectUsecase, zohoNoteScanJobUsecase, invokeLogJobUsecase, changeHistoryNodelayJobUseacse, dueDateUsecase, aiTaskJobUsecase, cmdUsecase, clientNameChangeJobUsecase, remindUsecase, monitorUsecase, boxUserBuzUsecase, monitoredEmailsJobUsecase)
	app := newApp(logger, grpcServer, httpServer, job)
	return app, func() {
		cleanup()
	}, nil
}
